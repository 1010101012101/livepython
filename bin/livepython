#!/usr/bin/env node

const fs = require("fs");
var electronPath = require("electron");
try {
  if (process.platform === "darwin") {
    fs.statSync(__dirname + "/../livepython-darwin-x64/");
    electronPath =
      __dirname +
      "/../livepython-darwin-x64/livepython.app/Contents/MacOS/livepython";
  }
} catch (e) {}

const { spawn } = require("child_process");
const byline = require("byline")

var args = process.argv.slice(2)

if (!args.length) {
  console.log("Usage: livepython [program] [..args]")
  process.exit()
}

args.unshift(__dirname + "/../tracer.py")

const electronProcess = spawn(electronPath, [__dirname + "/../"], {
  stdio: ["pipe", "pipe", "pipe", "ipc"]
})

const pythonProcess = spawn("python", args);

const pythonLineStream = byline.createStream(pythonProcess.stdout);

var buffer = []
var electronWindowOpened = false

pythonLineStream.on("data", line => {
  line = line.toString();
  if (!line.length) return;
  if (line.startsWith("[LIVEPYTHON_TRACER]")) {
    const msg = line
      .split(" ")
      .slice(1)
      .join(" ")
    if (electronWindowOpened) {
      electronProcess.send(msg);
    } else {
      buffer.push(msg);
    }
  } else {
    process.stdout.write(line + "\n");
  }
});

pythonProcess.stderr.on("data", data => {
  process.stdout.write(data.toString())
})

pythonProcess.on("exit", (code) => {
  if (code !== 0) {
    electronProcess.kill('SIGINT')
    process.exit();
  }
})

electronProcess.on("message", data => {
  electronWindowOpened = true
  buffer.forEach((msg) => {
    electronProcess.send(msg)
  })
})

function killSubprocesses () {
  // electronProcess.kill("SIGINT")
  // pythonProcess.kill("SIGINT")
}

process.on('exit', killSubprocesses)
process.on('SIGINT', killSubprocesses)
process.on("SIGUSR1", killSubprocesses)
process.on("SIGUSR2", killSubprocesses)
process.on("uncaughtException", killSubprocesses)